name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-12]

    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Enables python 3.10
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Runs a single command using the pwsh shell
      - name: Install Poetry
        shell: pwsh
        run: (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python - --version 1.2.1

      # Add poetry to the PATH for future steps using GITHUB_PATH
      - name: Add Poetry to PATH
        shell: pwsh
        run: |
          if ($IsMacOS) {
            Add-Content $env:GITHUB_PATH "~/Library/Application Support/pypoetry/venv/bin"
          }
          elseif ($IsLinux) {
            Add-Content $env:GITHUB_PATH "~/.local/share/pypoetry/venv/bin"
          }
          elseif ($IsWindows) {
            Add-Content $env:GITHUB_PATH "$Env:APPDATA\Python\Scripts"
          }

      # Creates a virtual environment and installs packages using poetry
      - name: Install Python Packages
        shell: pwsh
        run: poetry install

      # Runs pytest using poetry inside virtual environment
      - name: Run Pytest
        shell: pwsh
        run: poetry run pytest
